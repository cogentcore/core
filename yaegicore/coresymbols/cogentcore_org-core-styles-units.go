// Code generated by 'yaegi extract cogentcore.org/core/styles/units'. DO NOT EDIT.

package coresymbols

import (
	"cogentcore.org/core/styles/units"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/styles/units/units"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Ch":            reflect.ValueOf(units.Ch),
		"Cm":            reflect.ValueOf(units.Cm),
		"CmPerInch":     reflect.ValueOf(constant.MakeFromLiteral("2.539999999999999999965305530480463858111761510372161865234375", token.FLOAT, 0)),
		"Custom":        reflect.ValueOf(units.Custom),
		"Dot":           reflect.ValueOf(units.Dot),
		"Dp":            reflect.ValueOf(units.Dp),
		"DpPerInch":     reflect.ValueOf(constant.MakeFromLiteral("160", token.INT, 0)),
		"Eh":            reflect.ValueOf(units.Eh),
		"Em":            reflect.ValueOf(units.Em),
		"Ew":            reflect.ValueOf(units.Ew),
		"Ex":            reflect.ValueOf(units.Ex),
		"In":            reflect.ValueOf(units.In),
		"Mm":            reflect.ValueOf(units.Mm),
		"MmPerInch":     reflect.ValueOf(constant.MakeFromLiteral("25.39999999999999999965305530480463858111761510372161865234375", token.FLOAT, 0)),
		"New":           reflect.ValueOf(units.New),
		"NewContext":    reflect.ValueOf(units.NewContext),
		"Pc":            reflect.ValueOf(units.Pc),
		"PcPerInch":     reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"Ph":            reflect.ValueOf(units.Ph),
		"Pt":            reflect.ValueOf(units.Pt),
		"PtPerInch":     reflect.ValueOf(constant.MakeFromLiteral("72", token.INT, 0)),
		"Pw":            reflect.ValueOf(units.Pw),
		"Px":            reflect.ValueOf(units.Px),
		"PxPerInch":     reflect.ValueOf(constant.MakeFromLiteral("96", token.INT, 0)),
		"Q":             reflect.ValueOf(units.Q),
		"Rem":           reflect.ValueOf(units.Rem),
		"StringToValue": reflect.ValueOf(units.StringToValue),
		"UnitCh":        reflect.ValueOf(units.UnitCh),
		"UnitCm":        reflect.ValueOf(units.UnitCm),
		"UnitDot":       reflect.ValueOf(units.UnitDot),
		"UnitDp":        reflect.ValueOf(units.UnitDp),
		"UnitEh":        reflect.ValueOf(units.UnitEh),
		"UnitEm":        reflect.ValueOf(units.UnitEm),
		"UnitEw":        reflect.ValueOf(units.UnitEw),
		"UnitEx":        reflect.ValueOf(units.UnitEx),
		"UnitIn":        reflect.ValueOf(units.UnitIn),
		"UnitMm":        reflect.ValueOf(units.UnitMm),
		"UnitPc":        reflect.ValueOf(units.UnitPc),
		"UnitPh":        reflect.ValueOf(units.UnitPh),
		"UnitPt":        reflect.ValueOf(units.UnitPt),
		"UnitPw":        reflect.ValueOf(units.UnitPw),
		"UnitPx":        reflect.ValueOf(units.UnitPx),
		"UnitQ":         reflect.ValueOf(units.UnitQ),
		"UnitRem":       reflect.ValueOf(units.UnitRem),
		"UnitVh":        reflect.ValueOf(units.UnitVh),
		"UnitVmax":      reflect.ValueOf(units.UnitVmax),
		"UnitVmin":      reflect.ValueOf(units.UnitVmin),
		"UnitVw":        reflect.ValueOf(units.UnitVw),
		"UnitsN":        reflect.ValueOf(units.UnitsN),
		"UnitsValues":   reflect.ValueOf(units.UnitsValues),
		"Vh":            reflect.ValueOf(units.Vh),
		"Vmax":          reflect.ValueOf(units.Vmax),
		"Vmin":          reflect.ValueOf(units.Vmin),
		"Vw":            reflect.ValueOf(units.Vw),
		"Zero":          reflect.ValueOf(units.Zero),

		// type definitions
		"Context": reflect.ValueOf((*units.Context)(nil)),
		"Units":   reflect.ValueOf((*units.Units)(nil)),
		"Value":   reflect.ValueOf((*units.Value)(nil)),
		"XY":      reflect.ValueOf((*units.XY)(nil)),
	}
}
