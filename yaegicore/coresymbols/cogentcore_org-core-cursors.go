// Code generated by 'yaegi extract cogentcore.org/core/cursors'. DO NOT EDIT.

package coresymbols

import (
	"reflect"

	"cogentcore.org/core/cursors"
)

func init() {
	Symbols["cogentcore.org/core/cursors/cursors"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Alias":               reflect.ValueOf(cursors.Alias),
		"Arrow":               reflect.ValueOf(cursors.Arrow),
		"Cell":                reflect.ValueOf(cursors.Cell),
		"ContextMenu":         reflect.ValueOf(cursors.ContextMenu),
		"Copy":                reflect.ValueOf(cursors.Copy),
		"Crosshair":           reflect.ValueOf(cursors.Crosshair),
		"CursorN":             reflect.ValueOf(cursors.CursorN),
		"CursorValues":        reflect.ValueOf(cursors.CursorValues),
		"Cursors":             reflect.ValueOf(&cursors.Cursors).Elem(),
		"Grab":                reflect.ValueOf(cursors.Grab),
		"Grabbing":            reflect.ValueOf(cursors.Grabbing),
		"Help":                reflect.ValueOf(cursors.Help),
		"Hotspots":            reflect.ValueOf(&cursors.Hotspots).Elem(),
		"Move":                reflect.ValueOf(cursors.Move),
		"None":                reflect.ValueOf(cursors.None),
		"NotAllowed":          reflect.ValueOf(cursors.NotAllowed),
		"Pointer":             reflect.ValueOf(cursors.Pointer),
		"Poof":                reflect.ValueOf(cursors.Poof),
		"Progress":            reflect.ValueOf(cursors.Progress),
		"ResizeCol":           reflect.ValueOf(cursors.ResizeCol),
		"ResizeDown":          reflect.ValueOf(cursors.ResizeDown),
		"ResizeE":             reflect.ValueOf(cursors.ResizeE),
		"ResizeEW":            reflect.ValueOf(cursors.ResizeEW),
		"ResizeLeft":          reflect.ValueOf(cursors.ResizeLeft),
		"ResizeN":             reflect.ValueOf(cursors.ResizeN),
		"ResizeNE":            reflect.ValueOf(cursors.ResizeNE),
		"ResizeNESW":          reflect.ValueOf(cursors.ResizeNESW),
		"ResizeNS":            reflect.ValueOf(cursors.ResizeNS),
		"ResizeNW":            reflect.ValueOf(cursors.ResizeNW),
		"ResizeNWSE":          reflect.ValueOf(cursors.ResizeNWSE),
		"ResizeRight":         reflect.ValueOf(cursors.ResizeRight),
		"ResizeRow":           reflect.ValueOf(cursors.ResizeRow),
		"ResizeS":             reflect.ValueOf(cursors.ResizeS),
		"ResizeSE":            reflect.ValueOf(cursors.ResizeSE),
		"ResizeSW":            reflect.ValueOf(cursors.ResizeSW),
		"ResizeUp":            reflect.ValueOf(cursors.ResizeUp),
		"ResizeW":             reflect.ValueOf(cursors.ResizeW),
		"ScreenshotSelection": reflect.ValueOf(cursors.ScreenshotSelection),
		"ScreenshotWindow":    reflect.ValueOf(cursors.ScreenshotWindow),
		"SVG":                 reflect.ValueOf(cursors.SVG),
		"Text":                reflect.ValueOf(cursors.Text),
		"VerticalText":        reflect.ValueOf(cursors.VerticalText),
		"Wait":                reflect.ValueOf(cursors.Wait),
		"ZoomIn":              reflect.ValueOf(cursors.ZoomIn),
		"ZoomOut":             reflect.ValueOf(cursors.ZoomOut),

		// type definitions
		"Cursor": reflect.ValueOf((*cursors.Cursor)(nil)),
	}
}
