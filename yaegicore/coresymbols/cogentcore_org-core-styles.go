// Code generated by 'yaegi extract cogentcore.org/core/styles'. DO NOT EDIT.

package coresymbols

import (
	"cogentcore.org/core/styles"
	"reflect"
)

func init() {
	Symbols["cogentcore.org/core/styles/styles"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AlignFactor":               reflect.ValueOf(styles.AlignFactor),
		"AlignPos":                  reflect.ValueOf(styles.AlignPos),
		"AlignsN":                   reflect.ValueOf(styles.AlignsN),
		"AlignsValues":              reflect.ValueOf(styles.AlignsValues),
		"Auto":                      reflect.ValueOf(styles.Auto),
		"Baseline":                  reflect.ValueOf(styles.Baseline),
		"BorderDashed":              reflect.ValueOf(styles.BorderDashed),
		"BorderDotted":              reflect.ValueOf(styles.BorderDotted),
		"BorderDouble":              reflect.ValueOf(styles.BorderDouble),
		"BorderGroove":              reflect.ValueOf(styles.BorderGroove),
		"BorderInset":               reflect.ValueOf(styles.BorderInset),
		"BorderNone":                reflect.ValueOf(styles.BorderNone),
		"BorderOutset":              reflect.ValueOf(styles.BorderOutset),
		"BorderRadiusExtraLarge":    reflect.ValueOf(&styles.BorderRadiusExtraLarge).Elem(),
		"BorderRadiusExtraLargeTop": reflect.ValueOf(&styles.BorderRadiusExtraLargeTop).Elem(),
		"BorderRadiusExtraSmall":    reflect.ValueOf(&styles.BorderRadiusExtraSmall).Elem(),
		"BorderRadiusExtraSmallTop": reflect.ValueOf(&styles.BorderRadiusExtraSmallTop).Elem(),
		"BorderRadiusFull":          reflect.ValueOf(&styles.BorderRadiusFull).Elem(),
		"BorderRadiusLarge":         reflect.ValueOf(&styles.BorderRadiusLarge).Elem(),
		"BorderRadiusLargeEnd":      reflect.ValueOf(&styles.BorderRadiusLargeEnd).Elem(),
		"BorderRadiusLargeTop":      reflect.ValueOf(&styles.BorderRadiusLargeTop).Elem(),
		"BorderRadiusMedium":        reflect.ValueOf(&styles.BorderRadiusMedium).Elem(),
		"BorderRadiusSmall":         reflect.ValueOf(&styles.BorderRadiusSmall).Elem(),
		"BorderRidge":               reflect.ValueOf(styles.BorderRidge),
		"BorderSolid":               reflect.ValueOf(styles.BorderSolid),
		"BorderStylesN":             reflect.ValueOf(styles.BorderStylesN),
		"BorderStylesValues":        reflect.ValueOf(styles.BorderStylesValues),
		"BoxShadow0":                reflect.ValueOf(styles.BoxShadow0),
		"BoxShadow1":                reflect.ValueOf(styles.BoxShadow1),
		"BoxShadow2":                reflect.ValueOf(styles.BoxShadow2),
		"BoxShadow3":                reflect.ValueOf(styles.BoxShadow3),
		"BoxShadow4":                reflect.ValueOf(styles.BoxShadow4),
		"BoxShadow5":                reflect.ValueOf(styles.BoxShadow5),
		"BoxShadowMargin":           reflect.ValueOf(styles.BoxShadowMargin),
		"Center":                    reflect.ValueOf(styles.Center),
		"ClampMax":                  reflect.ValueOf(styles.ClampMax),
		"ClampMaxVector":            reflect.ValueOf(styles.ClampMaxVector),
		"ClampMin":                  reflect.ValueOf(styles.ClampMin),
		"ClampMinVector":            reflect.ValueOf(styles.ClampMinVector),
		"Column":                    reflect.ValueOf(styles.Column),
		"Custom":                    reflect.ValueOf(styles.Custom),
		"DefaultScrollbarWidth":     reflect.ValueOf(&styles.DefaultScrollbarWidth).Elem(),
		"DirectionsN":               reflect.ValueOf(styles.DirectionsN),
		"DirectionsValues":          reflect.ValueOf(styles.DirectionsValues),
		"DisplayNone":               reflect.ValueOf(styles.DisplayNone),
		"DisplaysN":                 reflect.ValueOf(styles.DisplaysN),
		"DisplaysValues":            reflect.ValueOf(styles.DisplaysValues),
		"End":                       reflect.ValueOf(styles.End),
		"FitContain":                reflect.ValueOf(styles.FitContain),
		"FitCover":                  reflect.ValueOf(styles.FitCover),
		"FitFill":                   reflect.ValueOf(styles.FitFill),
		"FitNone":                   reflect.ValueOf(styles.FitNone),
		"FitScaleDown":              reflect.ValueOf(styles.FitScaleDown),
		"Flex":                      reflect.ValueOf(styles.Flex),
		"FontSizePoints":            reflect.ValueOf(&styles.FontSizePoints).Elem(),
		"Grid":                      reflect.ValueOf(styles.Grid),
		"ItemAlign":                 reflect.ValueOf(styles.ItemAlign),
		"KeyboardEmail":             reflect.ValueOf(styles.KeyboardEmail),
		"KeyboardMultiLine":         reflect.ValueOf(styles.KeyboardMultiLine),
		"KeyboardNone":              reflect.ValueOf(styles.KeyboardNone),
		"KeyboardNumber":            reflect.ValueOf(styles.KeyboardNumber),
		"KeyboardPassword":          reflect.ValueOf(styles.KeyboardPassword),
		"KeyboardPhone":             reflect.ValueOf(styles.KeyboardPhone),
		"KeyboardSingleLine":        reflect.ValueOf(styles.KeyboardSingleLine),
		"KeyboardURL":               reflect.ValueOf(styles.KeyboardURL),
		"NewPaint":                  reflect.ValueOf(styles.NewPaint),
		"NewPaintWithContext":       reflect.ValueOf(styles.NewPaintWithContext),
		"NewStyle":                  reflect.ValueOf(styles.NewStyle),
		"ObjectFitsN":               reflect.ValueOf(styles.ObjectFitsN),
		"ObjectFitsValues":          reflect.ValueOf(styles.ObjectFitsValues),
		"ObjectSizeFromFit":         reflect.ValueOf(styles.ObjectSizeFromFit),
		"OverflowAuto":              reflect.ValueOf(styles.OverflowAuto),
		"OverflowHidden":            reflect.ValueOf(styles.OverflowHidden),
		"OverflowScroll":            reflect.ValueOf(styles.OverflowScroll),
		"OverflowVisible":           reflect.ValueOf(styles.OverflowVisible),
		"OverflowsN":                reflect.ValueOf(styles.OverflowsN),
		"OverflowsValues":           reflect.ValueOf(styles.OverflowsValues),
		"Row":                       reflect.ValueOf(styles.Row),
		"SetClampMax":               reflect.ValueOf(styles.SetClampMax),
		"SetClampMaxVector":         reflect.ValueOf(styles.SetClampMaxVector),
		"SetClampMin":               reflect.ValueOf(styles.SetClampMin),
		"SetClampMinVector":         reflect.ValueOf(styles.SetClampMinVector),
		"SetFromRichText":           reflect.ValueOf(styles.SetFromRichText),
		"SetRichText":               reflect.ValueOf(styles.SetRichText),
		"SpaceAround":               reflect.ValueOf(styles.SpaceAround),
		"SpaceBetween":              reflect.ValueOf(styles.SpaceBetween),
		"SpaceEvenly":               reflect.ValueOf(styles.SpaceEvenly),
		"Stacked":                   reflect.ValueOf(styles.Stacked),
		"Start":                     reflect.ValueOf(styles.Start),
		"StyleDefault":              reflect.ValueOf(&styles.StyleDefault).Elem(),
		"SubProperties":             reflect.ValueOf(styles.SubProperties),
		"ToCSS":                     reflect.ValueOf(styles.ToCSS),
		"VirtualKeyboardsN":         reflect.ValueOf(styles.VirtualKeyboardsN),
		"VirtualKeyboardsValues":    reflect.ValueOf(styles.VirtualKeyboardsValues),

		// type definitions
		"AlignSet":         reflect.ValueOf((*styles.AlignSet)(nil)),
		"Aligns":           reflect.ValueOf((*styles.Aligns)(nil)),
		"Border":           reflect.ValueOf((*styles.Border)(nil)),
		"BorderStyles":     reflect.ValueOf((*styles.BorderStyles)(nil)),
		"Directions":       reflect.ValueOf((*styles.Directions)(nil)),
		"Displays":         reflect.ValueOf((*styles.Displays)(nil)),
		"Fill":             reflect.ValueOf((*styles.Fill)(nil)),
		"Font":             reflect.ValueOf((*styles.Font)(nil)),
		"ObjectFits":       reflect.ValueOf((*styles.ObjectFits)(nil)),
		"Overflows":        reflect.ValueOf((*styles.Overflows)(nil)),
		"Paint":            reflect.ValueOf((*styles.Paint)(nil)),
		"Path":             reflect.ValueOf((*styles.Path)(nil)),
		"Shadow":           reflect.ValueOf((*styles.Shadow)(nil)),
		"Stroke":           reflect.ValueOf((*styles.Stroke)(nil)),
		"Style":            reflect.ValueOf((*styles.Style)(nil)),
		"Text":             reflect.ValueOf((*styles.Text)(nil)),
		"VirtualKeyboards": reflect.ValueOf((*styles.VirtualKeyboards)(nil)),
	}
}
