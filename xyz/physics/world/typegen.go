// Code generated by "core generate -add-types"; DO NOT EDIT.

package world

import (
	"cogentcore.org/core/types"
)

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/xyz/physics/world.Camera", IDName: "camera", Doc: "Camera defines the properties of a camera needed for offscreen rendering", Fields: []types.Field{{Name: "Size", Doc: "size of image to record"}, {Name: "FOV", Doc: "field of view in degrees"}, {Name: "Near", Doc: "near plane z coordinate"}, {Name: "Far", Doc: "far plane z coordinate"}, {Name: "MaxD", Doc: "maximum distance for depth maps. Anything above is 1.\nThis is independent of Near / Far rendering (though must be < Far)\nand is for normalized depth maps."}, {Name: "LogD", Doc: "use the natural log of 1 + depth for normalized depth values in display etc."}, {Name: "MSample", Doc: "number of multi-samples to use for antialising -- 4 is best and default."}, {Name: "UpDir", Doc: "up direction for camera. Defaults to positive Y axis,\nand is reset by call to LookAt method."}}})

var _ = types.AddType(&types.Type{Name: "cogentcore.org/core/xyz/physics/world.View", IDName: "view", Doc: "View connects a Virtual World with an [xyz.Scene] to visualize the world,\nincluding ability to render offscreen.", Fields: []types.Field{{Name: "World", Doc: "World is the root Group node of the virtual world"}, {Name: "Scene", Doc: "Scene is the [xyz.Scene] object for visualizing."}, {Name: "Root", Doc: "Root is the root Group node in the Scene under which the world is rendered."}}})
